---
title: "OJS tables"
format:
  html:
    self-contained: true
editor: visual
---

```{ojs}
//| echo: false

// https://observablehq.com/@observablehq/input-table

import {aq} from '@uwdata/arquero'

function sparkbar(max) {
  return x => htl.html`<div style="
    background: lightblue;
    width: ${100 * x / max}%;
    float: right;
    padding-right: 3px;
    box-sizing: border-box;
    overflow: visible;
    display: flex;
    justify-content: end;">${x.toLocaleString("en")}`
}


mtcars = d3.csvParse(`name,mpg,cyl,disp,hp,drat,wt,qsec,vs,am,gear,carb
Mazda RX4,21,6,160,110,3.9,2.62,16.46,0,1,4,4
Mazda RX4 Wag,21,6,-160,110,3.9,2.875,17.02,0,1,4,4
Datsun 710,22.8,4,108,93,3.85,2.32,18.61,1,1,4,1
Hornet 4 Drive,21.4,6,-258,110,3.08,3.215,19.44,1,0,3,1
Hornet Sportabout,18.7,8,360,175,3.15,3.44,17.02,0,0,3,2
Valiant,18.1,6,225,105,2.76,3.46,20.22,1,0,3,1
Duster 360,14.3,8,360,245,3.21,3.57,15.84,0,0,3,4
Merc 240D,24.4,4,146.7,62,3.69,3.19,20,1,0,4,2
`)

viewof columns = Inputs.select(
  ["name","mpg","cyl","disp","hp"],
  {
    multiple: true,
    value: ["name", "mpg"],
    label: "Select columns"
  }
  )

viewof selection = Inputs.table(mtcars, {
  
    sort: "mpg", reverse: true,
    
    columns: columns,
  
    header: {
      name: "Name",
      mpg: "Miles per Gallon",
      cyl: "Number of Cylinders",
      disp: "Displacement",
      hp: "Horse Power"
    },
  format: {
    mpg: sparkbar(d3.max(mtcars, d => d.mpg))
  }
    
  }
)


```
